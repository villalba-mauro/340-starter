<% if (title) { %>
<h1><%= title %></h1>

<!-- Flash message display area -->
<div class="pop-up"><%- messages() %></div>

<!-- Server-side errors display -->
<% if (errors) { %>
<ul class="notice">
  <% errors.array().forEach(error => { %>
  <li><%= error.msg %></li>
  <% }) %>
</ul>
<% } %>

<div class="favorites-container">
  <% if (favorites && favorites.length > 0) { %>
    <p>You have <%= favorites.length %> vehicle(s) in your favorites.</p>
    
    <div class="favorites-grid">
      <% favorites.forEach(function(vehicle) { %>
        <div class="favorite-item" data-vehicle-id="<%= vehicle.inv_id %>">
          <div class="favorite-image">
            <a href="/inv/detail/<%= vehicle.inv_id %>">
              <img src="<%= vehicle.inv_thumbnail %>" 
                   alt="<%= vehicle.inv_make %> <%= vehicle.inv_model %>" />
            </a>
          </div>
          
          <div class="favorite-details">
            <h3>
              <a href="/inv/detail/<%= vehicle.inv_id %>">
                <%= vehicle.inv_year %> <%= vehicle.inv_make %> <%= vehicle.inv_model %>
              </a>
            </h3>
            
            <p class="price">$<%= new Intl.NumberFormat('en-US').format(vehicle.inv_price) %></p>
            <p class="miles"><%= new Intl.NumberFormat('en-US').format(vehicle.inv_miles) %> miles</p>
            <p class="classification"><%= vehicle.classification_name %></p>
            <p class="date-added">Added: <%= new Date(vehicle.date_added).toLocaleDateString() %></p>
            
            <div class="favorite-actions">
              <a href="/inv/detail/<%= vehicle.inv_id %>" class="btn-view">View Details</a>
              <!-- üîß CAMBIO: Ahora es un bot√≥n que usa AJAX en lugar de enlace -->
              <button type="button" 
                      class="btn-remove" 
                      data-inv-id="<%= vehicle.inv_id %>"
                      data-vehicle-name="<%= vehicle.inv_year %> <%= vehicle.inv_make %> <%= vehicle.inv_model %>">
                Remove
              </button>
            </div>
          </div>
        </div>
      <% }) %>
    </div>
  <% } else { %>
    <div class="empty-favorites">
      <h2>No Favorites Yet</h2>
      <p>You haven't added any vehicles to your favorites list.</p>
      <p><a href="/" class="btn-browse">Browse Vehicles</a></p>
    </div>
  <% } %>
  
  <div class="back-link">
    <a href="/account/">‚Üê Back to Account Management</a>
  </div>
</div>

<style>
.favorites-container {
  max-width: 1200px;
  margin: 20px auto;
  padding: 20px;
}

.favorites-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 20px;
  margin-top: 20px;
}

.favorite-item {
  border: 1px solid #ddd;
  border-radius: 8px;
  padding: 15px;
  background-color: white;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  transition: transform 0.2s;
}

.favorite-item:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0,0,0,0.15);
}

.favorite-image {
  text-align: center;
  margin-bottom: 15px;
}

.favorite-image img {
  max-width: 100%;
  height: auto;
  border-radius: 4px;
}

.favorite-details h3 {
  margin: 0 0 10px 0;
  color: #333;
}

.favorite-details h3 a {
  color: #007bff;
  text-decoration: none;
}

.favorite-details h3 a:hover {
  text-decoration: underline;
}

.price {
  font-size: 1.2em;
  font-weight: bold;
  color: #28a745;
  margin: 5px 0;
}

.miles, .classification, .date-added {
  margin: 5px 0;
  color: #666;
  font-size: 0.9em;
}

.favorite-actions {
  margin-top: 15px;
  display: flex;
  gap: 10px;
}

.btn-view, .btn-remove, .btn-browse {
  padding: 8px 16px;
  text-decoration: none;
  border-radius: 4px;
  font-size: 0.9em;
  text-align: center;
  cursor: pointer;
  border: none;
  flex: 1;
  transition: all 0.3s ease;
  font-weight: 600;
}

.btn-view, .btn-browse {
  background-color: #007bff;
  color: white;
}

.btn-view:hover, .btn-browse:hover {
  background-color: #0056b3;
  color: white;
  text-decoration: none;
  transform: translateY(-1px);
}

.btn-remove {
  background-color: #dc3545;
  color: white;
}

.btn-remove:hover {
  background-color: #c82333;
  color: white;
  text-decoration: none;
  transform: translateY(-1px);
}

.btn-remove:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

.empty-favorites {
  text-align: center;
  padding: 40px;
  color: #666;
}

.empty-favorites h2 {
  color: #333;
  margin-bottom: 15px;
}

.back-link {
  text-align: center;
  margin-top: 30px;
}

.back-link a {
  color: #007bff;
  text-decoration: none;
  font-weight: bold;
}

.back-link a:hover {
  text-decoration: underline;
}

/* Indicador de que un veh√≠culo est√° siendo eliminado */
.favorite-item.removing {
  opacity: 0.5;
  pointer-events: none;
}

/* Animaci√≥n de eliminaci√≥n */
.favorite-item.fade-out {
  opacity: 0;
  transform: scale(0.8);
  transition: all 0.3s ease;
}
</style>

<!-- üîß NUEVO: JavaScript AJAX para manejar la eliminaci√≥n de favoritos -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  console.log('üîç Favorites page loaded, setting up remove buttons');
  
  // Obtener todos los botones de remove
  const removeButtons = document.querySelectorAll('.btn-remove');
  console.log('üîç Found remove buttons:', removeButtons.length);
  
  removeButtons.forEach(function(button) {
    button.addEventListener('click', function(e) {
      e.preventDefault();
      e.stopPropagation();
      
      const invId = this.dataset.invId;
      const vehicleName = this.dataset.vehicleName;
      
      console.log('üîç Remove button clicked for vehicle:', vehicleName, 'ID:', invId);
      
      // Confirmar eliminaci√≥n
      if (!confirm(`Remove "${vehicleName}" from favorites?`)) {
        console.log('üîç User cancelled removal');
        return;
      }
      
      // Encontrar el contenedor del veh√≠culo
      const vehicleItem = this.closest('.favorite-item');
      if (!vehicleItem) {
        console.error('‚ùå Could not find vehicle item container');
        return;
      }
      
      // Deshabilitar bot√≥n y mostrar estado de carga
      this.disabled = true;
      this.textContent = 'Removing...';
      vehicleItem.classList.add('removing');
      
      // URL para la petici√≥n AJAX
      const url = `/account/favorites/remove/${invId}`;
      console.log('üîç Making AJAX request to:', url);
      
      // üîß PETICI√ìN AJAX
      fetch(url, {
        method: 'GET',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json',
          'X-Requested-With': 'XMLHttpRequest'
        },
        credentials: 'same-origin'
      })
      .then(response => {
        console.log('üîç Response status:', response.status);
        
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const contentType = response.headers.get('content-type');
        if (!contentType || !contentType.includes('application/json')) {
          throw new Error('Response is not JSON');
        }
        
        return response.json();
      })
      .then(data => {
        console.log('üîç Response data:', data);
        
        if (data.success) {
          // ‚úÖ √âXITO: Mostrar toast y eliminar el veh√≠culo de la vista
          showToast(data.message, 'success');
          
          // Animar y eliminar el elemento
          vehicleItem.classList.add('fade-out');
          setTimeout(() => {
            vehicleItem.remove();
            
            // Verificar si quedan favoritos
            const remainingItems = document.querySelectorAll('.favorite-item');
            if (remainingItems.length === 0) {
              // Si no quedan favoritos, recargar la p√°gina para mostrar el mensaje de "No favorites"
              location.reload();
            } else {
              // Actualizar contador si existe
              const countText = document.querySelector('.favorites-container p');
              if (countText && countText.textContent.includes('vehicle(s)')) {
                const newCount = remainingItems.length;
                countText.textContent = `You have ${newCount} vehicle(s) in your favorites.`;
              }
            }
          }, 300);
          
        } else {
          // ‚ùå ERROR: Mostrar mensaje y restaurar bot√≥n
          showToast(data.message || 'Error removing from favorites', 'error');
          this.disabled = false;
          this.textContent = 'Remove';
          vehicleItem.classList.remove('removing');
        }
      })
      .catch(error => {
        console.error('‚ùå Fetch error:', error);
        showToast('Connection error. Please try again.', 'error');
        
        // Restaurar bot√≥n
        this.disabled = false;
        this.textContent = 'Remove';
        vehicleItem.classList.remove('removing');
      });
    });
  });
});
</script>

<% } else { res.redirect('/') } %>