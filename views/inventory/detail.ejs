<%# Vehicle Detail Page - Página de detalle del vehículo %>

<%# Vehicle Detail Display - Shows the detailed vehicle information %>
<div class="detail-container">
  <%- detailHtml %>
  
<!-- ✅ FAVORITES: Botones AJAX para usuarios logueados -->
<% if (locals.loggedin) { %>
  <div class="favorite-section">
    <button type="button"
            id="favoriteBtn" 
            class="btn-favorite <%= locals.isFavorite ? 'favorited' : '' %>"
            data-inv-id="<%= locals.vehicle.inv_id %>"
            data-is-favorite="<%= locals.isFavorite ? 'true' : 'false' %>">
      <span class="btn-icon"><%= locals.isFavorite ? '❤️' : '🤍' %></span>
      <span class="btn-text"><%= locals.isFavorite ? 'Remove from Favorites' : 'Add to Favorites' %></span>
    </button>
    
<% } else { %>
  <div class="favorite-section">
    <p><a href="/account/login">Login</a> to add this vehicle to your favorites!</p>
  </div>
<% } %>

<style>
.favorite-section {
  margin-top: 20px;
  text-align: center;
  padding: 15px;
  border-top: 1px solid #eee;
}

.btn-favorite {
  display: inline-block;
  padding: 12px 24px;
  margin: 10px;
  text-decoration: none;
  border-radius: 6px;
  font-size: 16px;
  font-weight: bold;
  transition: all 0.3s ease;
  border: 2px solid;
  cursor: pointer;
  background: none;
}

.btn-favorite:not(.favorited) {
  background-color: #007bff;
  color: white;
  border-color: #007bff;
}

.btn-favorite:not(.favorited):hover {
  background-color: #0056b3;
  border-color: #0056b3;
  color: white;
  text-decoration: none;
  transform: translateY(-2px);
}

.btn-favorite.favorited {
  background-color: #dc3545;
  color: white;
  border-color: #dc3545;
}

.btn-favorite.favorited:hover {
  background-color: #c82333;
  border-color: #c82333;
  color: white;
  text-decoration: none;
  transform: translateY(-2px);
}

.btn-favorite:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}
</style>

<!-- REEMPLAZA todo el JavaScript en views/inventory/detail.ejs con esto: -->

<script>
document.addEventListener('DOMContentLoaded', function() {
  const favoriteBtn = document.getElementById('favoriteBtn');
  
  if (favoriteBtn) {
    // 🔧 IMPORTANTE: Remover event listeners previos para evitar duplicados
    favoriteBtn.replaceWith(favoriteBtn.cloneNode(true));
    const newFavoriteBtn = document.getElementById('favoriteBtn');
    
    newFavoriteBtn.addEventListener('click', function(e) {
      // 🔧 PREVENIR comportamiento por defecto
      e.preventDefault();
      e.stopPropagation();
      
      const invId = this.dataset.invId;
      const isFavorite = this.dataset.isFavorite === 'true';
      const action = isFavorite ? 'remove' : 'add';
      const url = `/account/favorites/${action}/${invId}`;
      
      console.log('🔍 DEBUG: Haciendo petición a:', url);
      console.log('🔍 DEBUG: Acción:', action);
      
      // Deshabilitar botón durante petición
      this.disabled = true;
      this.style.opacity = '0.6';
      
      // 🔧 PETICIÓN AJAX MEJORADA
      fetch(url, {
        method: 'GET',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json',
          'X-Requested-With': 'XMLHttpRequest'
        },
        credentials: 'same-origin'  // 🔧 Incluir cookies de sesión
      })
      .then(response => {
        console.log('🔍 DEBUG: Response status:', response.status);
        console.log('🔍 DEBUG: Response headers:', response.headers.get('content-type'));
        
        // 🔧 VERIFICAR que la respuesta sea JSON
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const contentType = response.headers.get('content-type');
        if (!contentType || !contentType.includes('application/json')) {
          throw new Error('Response is not JSON');
        }
        
        return response.json();
      })
      .then(data => {
        console.log('🔍 DEBUG: Data received:', data);
        
        // 🔧 MOSTRAR TOAST SEGÚN RESULTADO
        if (data.success) {
          showToast(data.message, 'success');
          
          // 🔧 ACTUALIZAR BOTÓN SIN RECARGAR PÁGINA
          const newIsFavorite = data.action === 'added';
          this.dataset.isFavorite = newIsFavorite.toString();
          this.className = newIsFavorite ? 'btn-favorite favorited' : 'btn-favorite';
          
          const icon = this.querySelector('.btn-icon');
          const text = this.querySelector('.btn-text');
          
          if (newIsFavorite) {
            icon.textContent = '❤️';
            text.textContent = 'Remove from Favorites';
          } else {
            icon.textContent = '🤍';
            text.textContent = 'Add to Favorites';
          }
        } else {
          showToast(data.message || 'Error processing request', 'error');
        }
      })
      .catch(error => {
        console.error('❌ Fetch error:', error);
        showToast('Connection error. Please try again.', 'error');
      })
      .finally(() => {
        // 🔧 RE-HABILITAR BOTÓN
        this.disabled = false;
        this.style.opacity = '1';
      });
    });
  }
});
</script>